DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 90 current: 	:NNNNNNNNN
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 91 successors are: 
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 93 	br :entry
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 90 current: 	br :entry
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 91 successors are: 
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 93 	:entry
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 90 current: 	:myLabel1
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 91 successors are: 
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 93 	%newVar1 <- 3 >> 1
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 90 current: 	%newVar1 <- 3 >> 1
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 91 successors are: 
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 93 	%newVar0 <- %newVar1
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 90 current: 	%newVar0 <- %newVar1
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 91 successors are: 
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 93 	%newVar0 <- %newVar0 << 1
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 90 current: 	%newVar0 <- %newVar0 << 1
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 91 successors are: 
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 93 	%newVar0 <- %newVar0 + 1
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 90 current: 	%newVar0 <- %newVar0 + 1
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 91 successors are: 
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 93 	%newVar0 <- %newVar0 + 4
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 90 current: 	%newVar0 <- %newVar0 + 4
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 91 successors are: 
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 93 	%ar <- call allocate(%newVar0, 1)
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 90 current: 	%ar <- call allocate(%newVar0, 1)
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 91 successors are: 
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 93 	%newVar2 <- %ar + 8
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 90 current: 	%newVar2 <- %ar + 8
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 91 successors are: 
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 93 	store %newVar2 <- 3
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 90 current: 	store %newVar2 <- 3
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 91 successors are: 
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 93 	%newVar3 <- %ar + 16
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 90 current: 	%newVar3 <- %ar + 16
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 91 successors are: 
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 93 	store %newVar3 <- 3
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 90 current: 	store %newVar3 <- 3
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 91 successors are: 
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 93 	call print(%ar)
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 90 current: 	call print(%ar)
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 91 successors are: 
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 93 	return
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 90 current: 	return
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 91 successors are: 
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 90 current: 	:entry
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 91 successors are: 
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 93 	br :myLabel1
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 90 current: 	br :myLabel1
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 91 successors are: 
DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	br :myLabel1

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	:entry

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	return

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	call print(%ar)

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	store %newVar3 <- 3

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	%newVar3 <- %ar + 16

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	store %newVar2 <- 3

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	%newVar2 <- %ar + 8

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	%ar <- call allocate(%newVar0, 1)

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	%newVar0 <- %newVar0 + 4

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	%newVar0 <- %newVar0 + 1

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	%newVar0 <- %newVar0 << 1

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	%newVar0 <- %newVar1

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	%newVar1 <- 3 >> 1

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	:myLabel1

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	br :entry

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	:NNNNNNNNN

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	store %newVar3 <- 3

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	%newVar3 <- %ar + 16

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	store %newVar2 <- 3

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	%newVar2 <- %ar + 8

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	%ar <- call allocate(%newVar0, 1)

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	%newVar0 <- %newVar0 + 4

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	%newVar0 <- %newVar0 + 1

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	%newVar0 <- %newVar0 << 1

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	%newVar0 <- %newVar1

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	%newVar1 <- 3 >> 1

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	:myLabel1

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 136 	:NNNNNNNNN

{}

{}
DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 136 	br :entry

{}

{}
DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 136 	:myLabel1

{}

{}
DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 136 	%newVar1 <- 3 >> 1

{}

{%newVar1}
DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 136 	%newVar0 <- %newVar1

{%newVar1}

{%newVar0}
DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 136 	%newVar0 <- %newVar0 << 1

{%newVar0}

{%newVar0}
DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 136 	%newVar0 <- %newVar0 + 1

{%newVar0}

{%newVar0}
DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 136 	%newVar0 <- %newVar0 + 4

{%newVar0}

{%newVar0}
DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 136 	%ar <- call allocate(%newVar0, 1)

{%newVar0}

{%ar}
DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 136 	%newVar2 <- %ar + 8

{%ar}

{%ar, %newVar2}
DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 136 	store %newVar2 <- 3

{%ar, %newVar2}

{%ar}
DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 136 	%newVar3 <- %ar + 16

{%ar}

{%ar, %newVar3}
DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 136 	store %newVar3 <- 3

{%ar, %newVar3}

{%ar}
DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 136 	call print(%ar)

{%ar}

{}
DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 136 	return

{}

{}
DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 136 	:entry

{}

{}
DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 136 	br :myLabel1

{}

{}
DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 138 28 times
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 90 current: 	:NNNNNNNNN
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 91 successors are: 
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 93 	br :entry
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 90 current: 	br :entry
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 91 successors are: 
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 93 	:entry
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 90 current: 	:myLabel1
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 91 successors are: 
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 93 	%newVar1 <- 3 >> 1
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 90 current: 	%newVar1 <- 3 >> 1
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 91 successors are: 
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 93 	%newVar0 <- %newVar1
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 90 current: 	%newVar0 <- %newVar1
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 91 successors are: 
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 93 	%newVar0 <- %newVar0 << 1
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 90 current: 	%newVar0 <- %newVar0 << 1
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 91 successors are: 
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 93 	%newVar0 <- %newVar0 + 1
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 90 current: 	%newVar0 <- %newVar0 + 1
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 91 successors are: 
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 93 	%newVar0 <- %newVar0 + 4
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 90 current: 	%newVar0 <- %newVar0 + 4
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 91 successors are: 
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 93 	%ar <- call allocate(%newVar0, 1)
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 90 current: 	%ar <- call allocate(%newVar0, 1)
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 91 successors are: 
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 93 	%newVar2 <- %ar + 8
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 90 current: 	%newVar2 <- %ar + 8
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 91 successors are: 
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 93 	store %newVar2 <- 3
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 90 current: 	store %newVar2 <- 3
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 91 successors are: 
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 93 	%newVar3 <- %ar + 16
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 90 current: 	%newVar3 <- %ar + 16
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 91 successors are: 
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 93 	store %newVar3 <- 3
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 90 current: 	store %newVar3 <- 3
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 91 successors are: 
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 93 	call print(%ar)
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 90 current: 	call print(%ar)
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 91 successors are: 
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 93 	return
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 90 current: 	return
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 91 successors are: 
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 90 current: 	:entry
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 91 successors are: 
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 93 	br :myLabel1
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 90 current: 	br :myLabel1
DEBUG src/liveness-analysis.cpp : in function GenerateControlFlow, line 91 successors are: 
DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	br :myLabel1

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	:entry

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	return

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	call print(%ar)

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	store %newVar3 <- 3

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	%newVar3 <- %ar + 16

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	store %newVar2 <- 3

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	%newVar2 <- %ar + 8

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	%ar <- call allocate(%newVar0, 1)

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	%newVar0 <- %newVar0 + 4

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	%newVar0 <- %newVar0 + 1

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	%newVar0 <- %newVar0 << 1

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	%newVar0 <- %newVar1

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	%newVar1 <- 3 >> 1

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	:myLabel1

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	br :entry

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	:NNNNNNNNN

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	store %newVar3 <- 3

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	%newVar3 <- %ar + 16

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	store %newVar2 <- 3

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	%newVar2 <- %ar + 8

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	%ar <- call allocate(%newVar0, 1)

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	%newVar0 <- %newVar0 + 4

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	%newVar0 <- %newVar0 + 1

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	%newVar0 <- %newVar0 << 1

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	%newVar0 <- %newVar1

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	%newVar1 <- 3 >> 1

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 113 	:myLabel1

{}
 
{}

DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 136 	:NNNNNNNNN

{}

{}
DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 136 	br :entry

{}

{}
DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 136 	:myLabel1

{}

{}
DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 136 	%newVar1 <- 3 >> 1

{}

{%newVar1}
DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 136 	%newVar0 <- %newVar1

{%newVar1}

{%newVar0}
DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 136 	%newVar0 <- %newVar0 << 1

{%newVar0}

{%newVar0}
DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 136 	%newVar0 <- %newVar0 + 1

{%newVar0}

{%newVar0}
DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 136 	%newVar0 <- %newVar0 + 4

{%newVar0}

{%newVar0}
DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 136 	%ar <- call allocate(%newVar0, 1)

{%newVar0}

{%ar}
DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 136 	%newVar2 <- %ar + 8

{%ar}

{%ar, %newVar2}
DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 136 	store %newVar2 <- 3

{%ar, %newVar2}

{%ar}
DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 136 	%newVar3 <- %ar + 16

{%ar}

{%ar, %newVar3}
DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 136 	store %newVar3 <- 3

{%ar, %newVar3}

{%ar}
DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 136 	call print(%ar)

{%ar}

{}
DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 136 	return

{}

{}
DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 136 	:entry

{}

{}
DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 136 	br :myLabel1

{}

{}
DEBUG src/liveness-analysis.cpp : in function GenerateInAndOut, line 138 56 times
DEBUG src/tiling.cpp : in function GenerateTree, line 70 generate tree of	:NNNNNNNNN
DEBUG src/tiling.cpp : in function MergingTree, line 96 before merging
DEBUG src/tiling.cpp : in function PrintTree, line 15 {
parent: :NNNNNNNNN 
}
DEBUG src/tiling.cpp : in function MergingTree, line 196 after merging
DEBUG src/tiling.cpp : in function PrintTree, line 15 {
parent: :NNNNNNNNN 
}
DEBUG src/tiling.cpp : in function GenerateTree, line 70 generate tree of	br :entry
DEBUG src/tiling.cpp : in function MergingTree, line 96 before merging
DEBUG src/tiling.cpp : in function PrintTree, line 15 {
parent: br child 0: :entry 
parent: :entry 
}
DEBUG src/tiling.cpp : in function MergingTree, line 196 after merging
DEBUG src/tiling.cpp : in function PrintTree, line 15 {
parent: br child 0: :entry 
parent: :entry 
}
DEBUG src/tiling.cpp : in function GenerateTree, line 70 generate tree of	:myLabel1
DEBUG src/tiling.cpp : in function MergingTree, line 96 before merging
DEBUG src/tiling.cpp : in function PrintTree, line 15 {
parent: :myLabel1 
}
DEBUG src/tiling.cpp : in function MergingTree, line 196 after merging
DEBUG src/tiling.cpp : in function PrintTree, line 15 {
parent: :myLabel1 
}
DEBUG src/tiling.cpp : in function GenerateTree, line 70 generate tree of	%newVar1 <- 3 >> 1
DEBUG src/tiling.cpp : in function GenerateTree, line 70 generate tree of	%newVar0 <- %newVar1
DEBUG src/tiling.cpp : in function GenerateTree, line 70 generate tree of	%newVar0 <- %newVar0 << 1
DEBUG src/tiling.cpp : in function GenerateTree, line 70 generate tree of	%newVar0 <- %newVar0 + 1
DEBUG src/tiling.cpp : in function GenerateTree, line 70 generate tree of	%newVar0 <- %newVar0 + 4
DEBUG src/tiling.cpp : in function MergingTree, line 96 before merging
DEBUG src/tiling.cpp : in function PrintTree, line 15 {
parent: %newVar1 child 0: >> 
parent: >> child 0: 3 child 1: 1 
parent: 3 
parent: 1 
}
DEBUG src/tiling.cpp : in function PrintTree, line 15 {
parent: %newVar0 child 0: <- 
parent: <- child 0: %newVar1 
parent: %newVar1 
}
DEBUG src/tiling.cpp : in function PrintTree, line 15 {
parent: %newVar0 child 0: << 
parent: << child 0: %newVar0 child 1: 1 
parent: %newVar0 
parent: 1 
}
DEBUG src/tiling.cpp : in function PrintTree, line 15 {
parent: %newVar0 child 0: + 
parent: + child 0: %newVar0 child 1: 1 
parent: %newVar0 
parent: 1 
}
DEBUG src/tiling.cpp : in function PrintTree, line 15 {
parent: %newVar0 child 0: + 
parent: + child 0: %newVar0 child 1: 4 
parent: %newVar0 
parent: 4 
}
DEBUG src/tiling.cpp : in function MergingTree, line 118 probably able to merge
DEBUG src/tiling.cpp : in function MergingTree, line 127 %newVar1 is dead
DEBUG src/tiling.cpp : in function MergingTree, line 140 no other uses in [T2, T1)
DEBUG src/tiling.cpp : in function MergingTree, line 155 no defs of variables used by T2 in [T2, T1)
DEBUG src/tiling.cpp : in function MergingTree, line 170 able to merge
DEBUG src/tiling.cpp : in function MergingTree, line 118 probably able to merge
DEBUG src/tiling.cpp : in function MergingTree, line 118 probably able to merge
DEBUG src/tiling.cpp : in function MergingTree, line 118 probably able to merge
DEBUG src/tiling.cpp : in function MergingTree, line 118 probably able to merge
DEBUG src/tiling.cpp : in function MergingTree, line 118 probably able to merge
DEBUG src/tiling.cpp : in function MergingTree, line 118 probably able to merge
DEBUG src/tiling.cpp : in function MergingTree, line 196 after merging
DEBUG src/tiling.cpp : in function PrintTree, line 15 {
parent: %newVar0 child 0: <- 
parent: <- child 0: %newVar1 
parent: %newVar1 child 0: >> 
parent: >> child 0: 3 child 1: 1 
parent: 3 
parent: 1 
}
DEBUG src/tiling.cpp : in function PrintTree, line 15 {
parent: %newVar0 child 0: << 
parent: << child 0: %newVar0 child 1: 1 
parent: %newVar0 
parent: 1 
}
DEBUG src/tiling.cpp : in function PrintTree, line 15 {
parent: %newVar0 child 0: + 
parent: + child 0: %newVar0 child 1: 1 
parent: %newVar0 
parent: 1 
}
DEBUG src/tiling.cpp : in function PrintTree, line 15 {
parent: %newVar0 child 0: + 
parent: + child 0: %newVar0 child 1: 4 
parent: %newVar0 
parent: 4 
}
DEBUG src/tiling.cpp : in function MergingTree, line 96 before merging
DEBUG src/tiling.cpp : in function PrintTree, line 15 {
parent: %newVar0 child 0: <- 
parent: <- child 0: %newVar1 
parent: %newVar1 child 0: >> 
parent: >> child 0: 3 child 1: 1 
parent: 3 
parent: 1 
}
DEBUG src/tiling.cpp : in function PrintTree, line 15 {
parent: %newVar0 child 0: << 
parent: << child 0: %newVar0 child 1: 1 
parent: %newVar0 
parent: 1 
}
DEBUG src/tiling.cpp : in function PrintTree, line 15 {
parent: %newVar0 child 0: + 
parent: + child 0: %newVar0 child 1: 1 
parent: %newVar0 
parent: 1 
}
DEBUG src/tiling.cpp : in function PrintTree, line 15 {
parent: %newVar0 child 0: + 
parent: + child 0: %newVar0 child 1: 4 
parent: %newVar0 
parent: 4 
}
DEBUG src/tiling.cpp : in function MergingTree, line 118 probably able to merge
DEBUG src/tiling.cpp : in function MergingTree, line 118 probably able to merge
DEBUG src/tiling.cpp : in function MergingTree, line 118 probably able to merge
DEBUG src/tiling.cpp : in function MergingTree, line 118 probably able to merge
DEBUG src/tiling.cpp : in function MergingTree, line 118 probably able to merge
DEBUG src/tiling.cpp : in function MergingTree, line 118 probably able to merge
DEBUG src/tiling.cpp : in function MergingTree, line 196 after merging
DEBUG src/tiling.cpp : in function PrintTree, line 15 {
parent: %newVar0 child 0: <- 
parent: <- child 0: %newVar1 
parent: %newVar1 child 0: >> 
parent: >> child 0: 3 child 1: 1 
parent: 3 
parent: 1 
}
DEBUG src/tiling.cpp : in function PrintTree, line 15 {
parent: %newVar0 child 0: << 
parent: << child 0: %newVar0 child 1: 1 
parent: %newVar0 
parent: 1 
}
DEBUG src/tiling.cpp : in function PrintTree, line 15 {
parent: %newVar0 child 0: + 
parent: + child 0: %newVar0 child 1: 1 
parent: %newVar0 
parent: 1 
}
DEBUG src/tiling.cpp : in function PrintTree, line 15 {
parent: %newVar0 child 0: + 
parent: + child 0: %newVar0 child 1: 4 
parent: %newVar0 
parent: 4 
}
DEBUG src/tiling.cpp : in function GenerateTree, line 70 generate tree of	%ar <- call allocate(%newVar0, 1)
DEBUG src/tiling.cpp : in function MergingTree, line 96 before merging
DEBUG src/tiling.cpp : in function PrintTree, line 15 {
parent: %ar child 0: call 
parent: call child 0: allocate 
parent: allocate child 0: %newVar0 child 1: 1 
parent: %newVar0 
parent: 1 
}
DEBUG src/tiling.cpp : in function MergingTree, line 196 after merging
DEBUG src/tiling.cpp : in function PrintTree, line 15 {
parent: %ar child 0: call 
parent: call child 0: allocate 
parent: allocate child 0: %newVar0 child 1: 1 
parent: %newVar0 
parent: 1 
}
DEBUG src/tiling.cpp : in function GenerateTree, line 70 generate tree of	%newVar2 <- %ar + 8
DEBUG src/tiling.cpp : in function GenerateTree, line 70 generate tree of	store %newVar2 <- 3
DEBUG src/tiling.cpp : in function GenerateTree, line 70 generate tree of	%newVar3 <- %ar + 16
DEBUG src/tiling.cpp : in function GenerateTree, line 70 generate tree of	store %newVar3 <- 3
DEBUG src/tiling.cpp : in function MergingTree, line 96 before merging
DEBUG src/tiling.cpp : in function PrintTree, line 15 {
parent: %newVar2 child 0: + 
parent: + child 0: %ar child 1: 8 
parent: %ar 
parent: 8 
}
DEBUG src/tiling.cpp : in function PrintTree, line 15 {
parent: store child 0: %newVar2 child 1: 3 
parent: %newVar2 
parent: 3 
}
DEBUG src/tiling.cpp : in function PrintTree, line 15 {
parent: %newVar3 child 0: + 
parent: + child 0: %ar child 1: 16 
parent: %ar 
parent: 16 
}
DEBUG src/tiling.cpp : in function PrintTree, line 15 {
parent: store child 0: %newVar3 child 1: 3 
parent: %newVar3 
parent: 3 
}
DEBUG src/tiling.cpp : in function MergingTree, line 118 probably able to merge
DEBUG src/tiling.cpp : in function MergingTree, line 127 %newVar2 is dead
DEBUG src/tiling.cpp : in function MergingTree, line 140 no other uses in [T2, T1)
DEBUG src/tiling.cpp : in function MergingTree, line 155 no defs of variables used by T2 in [T2, T1)
DEBUG src/tiling.cpp : in function MergingTree, line 170 able to merge
DEBUG src/tiling.cpp : in function MergingTree, line 118 probably able to merge
DEBUG src/tiling.cpp : in function MergingTree, line 127 %newVar3 is dead
DEBUG src/tiling.cpp : in function MergingTree, line 140 no other uses in [T2, T1)
DEBUG src/tiling.cpp : in function MergingTree, line 155 no defs of variables used by T2 in [T2, T1)
DEBUG src/tiling.cpp : in function MergingTree, line 170 able to merge
DEBUG src/tiling.cpp : in function MergingTree, line 196 after merging
DEBUG src/tiling.cpp : in function PrintTree, line 15 {
parent: store child 0: %newVar2 child 1: 3 
parent: %newVar2 child 0: + 
parent: 3 
parent: + child 0: %ar child 1: 8 
parent: %ar 
parent: 8 
}
DEBUG src/tiling.cpp : in function PrintTree, line 15 {
parent: store child 0: %newVar3 child 1: 3 
parent: %newVar3 child 0: + 
parent: 3 
parent: + child 0: %ar child 1: 16 
parent: %ar 
parent: 16 
}
DEBUG src/tiling.cpp : in function MergingTree, line 96 before merging
DEBUG src/tiling.cpp : in function PrintTree, line 15 {
parent: store child 0: %newVar2 child 1: 3 
parent: %newVar2 child 0: + 
parent: 3 
parent: + child 0: %ar child 1: 8 
parent: %ar 
parent: 8 
}
DEBUG src/tiling.cpp : in function PrintTree, line 15 {
parent: store child 0: %newVar3 child 1: 3 
parent: %newVar3 child 0: + 
parent: 3 
parent: + child 0: %ar child 1: 16 
parent: %ar 
parent: 16 
}
DEBUG src/tiling.cpp : in function MergingTree, line 196 after merging
DEBUG src/tiling.cpp : in function PrintTree, line 15 {
parent: store child 0: %newVar2 child 1: 3 
parent: %newVar2 child 0: + 
parent: 3 
parent: + child 0: %ar child 1: 8 
parent: %ar 
parent: 8 
}
DEBUG src/tiling.cpp : in function PrintTree, line 15 {
parent: store child 0: %newVar3 child 1: 3 
parent: %newVar3 child 0: + 
parent: 3 
parent: + child 0: %ar child 1: 16 
parent: %ar 
parent: 16 
}
DEBUG src/tiling.cpp : in function GenerateTree, line 70 generate tree of	call print(%ar)
DEBUG src/tiling.cpp : in function MergingTree, line 96 before merging
DEBUG src/tiling.cpp : in function PrintTree, line 15 {
parent: call child 0: print 
parent: print child 0: %ar 
parent: %ar 
}
DEBUG src/tiling.cpp : in function MergingTree, line 196 after merging
DEBUG src/tiling.cpp : in function PrintTree, line 15 {
parent: call child 0: print 
parent: print child 0: %ar 
parent: %ar 
}
DEBUG src/tiling.cpp : in function GenerateTree, line 70 generate tree of	return
DEBUG src/tiling.cpp : in function MergingTree, line 96 before merging
DEBUG src/tiling.cpp : in function PrintTree, line 15 {
parent: return 
}
DEBUG src/tiling.cpp : in function MergingTree, line 196 after merging
DEBUG src/tiling.cpp : in function PrintTree, line 15 {
parent: return 
}
DEBUG src/tiling.cpp : in function GenerateTree, line 70 generate tree of	:entry
DEBUG src/tiling.cpp : in function MergingTree, line 96 before merging
DEBUG src/tiling.cpp : in function PrintTree, line 15 {
parent: :entry 
}
DEBUG src/tiling.cpp : in function MergingTree, line 196 after merging
DEBUG src/tiling.cpp : in function PrintTree, line 15 {
parent: :entry 
}
DEBUG src/tiling.cpp : in function GenerateTree, line 70 generate tree of	br :myLabel1
DEBUG src/tiling.cpp : in function MergingTree, line 96 before merging
DEBUG src/tiling.cpp : in function PrintTree, line 15 {
parent: br child 0: :myLabel1 
parent: :myLabel1 
}
DEBUG src/tiling.cpp : in function MergingTree, line 196 after merging
DEBUG src/tiling.cpp : in function PrintTree, line 15 {
parent: br child 0: :myLabel1 
parent: :myLabel1 
}
